layout(location = 4) in vec3 vertex_worldPosition;

#if defined(HAS_ATTRIBUTE_TANGENTS)
layout(location = 5) in vec3 vertex_worldNormal;
layout(location = 6) in vec4 vertex_worldTangent;
#endif

layout(location = 7) in vec4 vertex_position;

#if defined(HAS_ATTRIBUTE_COLOR)
layout(location = 9) in vec4 vertex_color;
#endif

#if defined(HAS_ATTRIBUTE_UV0) && !defined(HAS_ATTRIBUTE_UV1)
layout(location = 10) in vec2 vertex_uv01;
#elif defined(HAS_ATTRIBUTE_UV1)
layout(location = 10) in vec4 vertex_uv01;
#endif

#if defined(HAS_SHADOWING) && defined(HAS_DIRECTIONAL_LIGHTING)
layout(location = 11) in vec4 vertex_lightSpacePosition;
#endif

#if defined(RENDER_PATH_DEFERRED)
layout(location = 0) out vec4 gBufferA;
layout(location = 1) out vec4 gBufferB;
layout(location = 2) out vec4 gBufferC;
layout(location = 3) out vec4 gBufferD;
layout(location = 4) out vec4 gBufferE;

#elif defined(RENDER_PATH_FORWARD)
layout(location = 0) out vec4 outColor;
#endif